WEBVTT

00:00.350 --> 00:08.010
We'll come back and this week we are going to look at the completion of Python basics file and we're

00:08.010 --> 00:13.220
going to answer two questions here or we're going to write the code that is requested.

00:13.410 --> 00:18.570
And in this case we have this little situation where a mathematician.

00:18.630 --> 00:21.140
So a magician who likes math.

00:21.290 --> 00:26.440
He's asking us to automate one of her tricks with a small program.

00:26.460 --> 00:28.050
The trick starts as follow.

00:28.050 --> 00:35.440
Think of a number variable number multiplied by to add 10 to the result and divide the result by two.

00:35.760 --> 00:38.710
So we have this variable number here.

00:38.760 --> 00:40.040
This is think of a number.

00:40.170 --> 00:45.320
So we have this variable number six and now we need to write code into the following line.

00:45.480 --> 00:47.670
So let's go ahead and do that.

00:48.330 --> 00:51.970
We need to write instead of result is zero.

00:52.140 --> 00:55.060
We need to write the code that does what we have here.

00:55.110 --> 00:56.490
So multiply by two.

00:56.490 --> 01:01.080
All right let's do that let's multiply number by 2.

01:01.530 --> 01:05.200
Now the next thing is add 10 to the result.

01:05.430 --> 01:07.340
So what is the result of that.

01:07.350 --> 01:11.100
It's whatever is done within the brackets.

01:11.280 --> 01:17.480
So now let's add 10 to it and now divide this result by two.

01:17.520 --> 01:23.790
Of course you could have done that in multiple lines but I'm going to do it in one line and I'm going

01:23.790 --> 01:27.450
to use brackets again and divide now by two.

01:27.510 --> 01:30.720
So no I have followed this instruction here.

01:30.780 --> 01:35.340
Think of a number where we have that number six for example multiplied by two.

01:35.340 --> 01:39.860
We've done that here then added tend to result to the result.

01:39.870 --> 01:45.190
And that's this one here and then finally divide that by two and that's it.

01:45.360 --> 01:52.830
So now let's run the code and we can see we get 11 toward zero as a result.

01:52.830 --> 01:54.840
So now there is a little suggestion.

01:54.870 --> 01:57.180
This is really about the Pied Python code.

01:57.180 --> 02:01.820
It's not that much about the story right but the story is a little something to follow along.

02:01.820 --> 02:02.720
It's a cool thing.

02:02.820 --> 02:07.800
But what is really important is that you understand the code behind that and the approach that we are

02:07.800 --> 02:09.090
using.

02:09.090 --> 02:09.580
All right.

02:09.690 --> 02:15.330
So then we have this result correct output is 11.0 that's exactly what we have here.

02:15.420 --> 02:21.900
When she sees the mathematician turns up her nose the result is still displayed as a decimal number.

02:21.900 --> 02:26.320
Now we need to convert the result to an integer before we presented.

02:26.550 --> 02:34.280
So let's go ahead and display the result of the calculation here has an integer.

02:34.350 --> 02:35.780
So let's go ahead.

02:35.880 --> 02:39.600
I'm just going to add a line here.

02:39.600 --> 02:42.580
Print end result.

02:42.600 --> 02:48.000
So what we do here is we simply print the result as an integer.

02:48.060 --> 02:54.780
So let's do that and we see we get this result of course in order to easier understand what the result

02:54.810 --> 02:55.100
is.

02:55.110 --> 02:58.930
We can have this line in here as well.

02:58.950 --> 03:01.490
So now it's easier to follow along with the result.

03:01.590 --> 03:05.080
In the end should be right the correct output is 11.

03:05.100 --> 03:05.870
And here it is.

03:05.880 --> 03:07.770
No need to be colored.

03:07.830 --> 03:10.980
What that means is actually this is incorrect here.

03:10.980 --> 03:13.410
No need to be color.

03:13.980 --> 03:21.960
This means that here we see it as a green 11 but it should be black or whatever the color comes up.

03:22.020 --> 03:23.790
So the color doesn't matter.

03:23.880 --> 03:30.320
Now the next step is to mathematician points out that magic tricks also depend on the presentation.

03:30.510 --> 03:35.790
Now give an answer sentence of the form you chose six.

03:35.820 --> 03:43.470
The magical result is 11 where the variable number is to be used for number six.

03:43.470 --> 03:47.090
And the result variable result for the number 11.

03:47.370 --> 03:52.810
So we should say something like you chose number.

03:52.920 --> 03:55.660
The magical result is result.

03:55.710 --> 03:57.410
So let's just do that.

03:57.540 --> 04:01.980
Let's add a line in here which is does dead print

04:05.400 --> 04:17.040
you chose and then plus has t our number plus the space.

04:17.070 --> 04:27.360
The magical resoled is Plus as t our result as we need to use it as a result.

04:27.480 --> 04:32.300
And here it's important that we have the closing bracket for that print statement from here.

04:32.490 --> 04:38.930
And also we have this exclamation mark so let's add that in there as well.

04:39.210 --> 04:41.490
11 exclamation mark.

04:41.940 --> 04:42.180
All right.

04:42.190 --> 04:43.140
Now let's check it out.

04:43.170 --> 04:45.480
And as we can see you chose six.

04:45.480 --> 04:47.260
The magical result is 11.

04:47.430 --> 04:49.970
And now it needs to be as in 11.

04:50.100 --> 04:55.260
So we need to also use an integer here.

04:55.290 --> 04:57.020
So we need to make it an integer.

04:57.270 --> 04:58.320
So how do we do that.

04:58.350 --> 05:02.550
Well we use the int function here.

05:02.670 --> 05:10.410
So we say make an integer out of this result and then make a string out of the result of this approach

05:10.410 --> 05:10.840
here.

05:10.980 --> 05:16.400
So if we run that again we can see you chose six the magical result is 11.

05:17.100 --> 05:20.960
All right so now the mathematician is happy with the result here.

05:21.030 --> 05:22.680
But then she has a different problem.

05:22.860 --> 05:28.020
So mathematician is very happy with your work and asked you for help with her online shop.

05:28.020 --> 05:34.470
She only knows the e-mail addresses of our customers and you should create a simply fide directory with

05:34.470 --> 05:36.920
the names based on the e-mail addresses.

05:37.080 --> 05:43.860
So draw a name from a e-mail address or an e-mail address in the form name add service that come if

05:43.860 --> 05:45.140
the e-mail address is.

05:45.150 --> 05:47.800
For example Max must remain at G-mail.

05:47.820 --> 05:52.320
But come you should out put Max minus mastermind.

05:52.710 --> 06:01.170
If the e-mail address is Clora clar name on that then it should be or at uni Berlin at 30 than it should

06:01.170 --> 06:01.820
be.

06:01.850 --> 06:08.490
Clark Namen so be sure to check the split method again.

06:08.520 --> 06:15.770
This allows you to source plute or so or split an email address had the ADD symbol for example.

06:15.810 --> 06:20.270
So we have this email address with the wizard and Magic School dot com.

06:20.280 --> 06:23.180
And to correct output should be willy wizard.

06:23.190 --> 06:24.710
So how do we do that.

06:24.930 --> 06:28.230
Well can simply go ahead and print that let's print.

06:28.560 --> 06:35.790
But what do we want to do when we want to split the email as follows.

06:35.790 --> 06:42.510
With the split function and here we use add as the split character

06:45.510 --> 06:50.050
and then we want to have the first entry.

06:50.070 --> 06:56.220
This is a list so we split it up but now we want a first entry from it and I know this one was tricky

06:56.610 --> 06:59.620
but if you figure this out then that's great.

06:59.620 --> 07:02.160
And I check it out and we see see that wizard.

07:02.340 --> 07:07.510
That's going to be the name of the guy now.

07:07.530 --> 07:12.880
All right so now draw a name from an email address in the form info at name dot com.

07:12.900 --> 07:17.590
Sometimes the names of the email address are only after the ADD sign.

07:17.640 --> 07:20.370
Also print the names for such cases.

07:20.370 --> 07:22.900
Remove the ending dot com or dot to e.

07:23.040 --> 07:26.880
You may assume that there is no period with the name.

07:26.940 --> 07:34.240
If the email address is for example info at max Monis must have meant accom you should output mux madness

07:34.250 --> 07:37.520
must amount on next month's muscleman and then note.

07:37.590 --> 07:42.320
It's OK if you need several split functions for the calculation.

07:42.320 --> 07:50.280
Or if you wanted to cash a result also or you're also welcome to use the code from a subtask queue.

07:50.570 --> 07:54.430
All right so let's go ahead and do that for this e-mail address that we have here.

07:54.470 --> 08:02.190
So there's a lady called Hielan a work which And we want to get her name from that email address.

08:02.330 --> 08:05.170
So let's go ahead and print that.

08:05.270 --> 08:14.870
So we use the print method again or print function and we say mail that split the at sign but then we

08:14.870 --> 08:20.220
want to have not the first entry but the second entry.

08:20.450 --> 08:25.290
So we use one and that we want to split again.

08:25.370 --> 08:35.250
So we want to split it at the dot and we do so by using the split method or function once again where

08:35.360 --> 08:41.760
I just say Sblood and Dot and here off we want to have the first entry.

08:41.810 --> 08:45.590
So so what does this do.

08:45.590 --> 08:48.120
So what happens in here.

08:48.170 --> 08:50.440
Actually that should be outside.

08:50.570 --> 08:58.430
So you have to be super careful right because if you have the or have anything at the wrong point then

08:58.430 --> 09:00.070
it's going to be pretty difficult.

09:00.260 --> 09:02.930
So let me execute that.

09:02.990 --> 09:04.580
And as you can see we get Helinet which.

09:04.580 --> 09:05.980
So why is that.

09:06.170 --> 09:13.130
So first of all we split at the outside so we split that debt and we have two entries in our list because

09:13.160 --> 09:16.010
this here this creates a list.

09:16.220 --> 09:21.600
So we have a list with two entries and the zero index zero we have in for at index 1.

09:21.620 --> 09:24.880
We have Halina minus which dot com.

09:25.250 --> 09:32.360
And that's exactly what we get with this piece here so we get this minus which dot com and now we split

09:32.420 --> 09:38.470
that piece again because this year is a string again because we're only getting 1 inch.

09:38.480 --> 09:45.730
So we get the string and now we can apply the split function once again onto that string.

09:45.890 --> 09:52.100
And this time we split the dot so we split this piece of text here at this dot here.

09:52.130 --> 10:01.270
So at DOT and we take the first entry of this whole thing here with this whole list.

10:01.430 --> 10:04.280
And that will be healin which.

10:04.730 --> 10:08.660
So now in order to do that with two lines we can also approach it like that.

10:08.660 --> 10:17.720
We can just take mail that split at the sign like this and we want to.

10:17.900 --> 10:24.750
Well let's just do that as you can see we have this approach here with this list here which is info

10:24.880 --> 10:26.670
you know which are come.

10:26.700 --> 10:37.370
Now if you want to print mail dot split at the at sign once again but this time I want to get the entry

10:37.370 --> 10:44.420
at one and I have one separator on the wrong side.

10:44.420 --> 10:50.400
So now we're good as you can see now we get this Nina and or minus which dot come.

10:50.420 --> 10:56.240
That's what what happens here and what we could do is of course store data so we could go ahead and

10:56.240 --> 11:06.280
store it with any variable and that will be name on the score and ending or at Ptomaine Maybe.

11:06.320 --> 11:15.800
Maybe that's better and high level domain high level domain because that's what this does.

11:15.980 --> 11:16.990
Now.

11:17.150 --> 11:20.980
This is is not mind is which dot com.

11:21.080 --> 11:22.610
That's what this gives us.

11:22.620 --> 11:24.880
Now we can split this one here.

11:24.890 --> 11:32.140
So this name and high level domain and we can split that again.

11:32.150 --> 11:36.770
So let's split it at the dot and let's print that as well.

11:36.770 --> 11:39.860
So let's print the result of that.

11:40.070 --> 11:42.310
Let's actually store that in a list.

11:42.940 --> 11:48.350
So I'm going to call that list is going to be actually list one is going to be that.

11:48.410 --> 11:50.730
And let's print out and list one.

11:51.410 --> 12:01.240
So print list one as you can see we have this list which says here you know mine which one minus which.

12:01.240 --> 12:03.400
And then we have come in from that list.

12:03.410 --> 12:05.060
We only take the first entry.

12:05.270 --> 12:15.260
So we say print last one had position zero and now it's running again and you can see we can get to

12:15.260 --> 12:16.150
see which.

12:16.160 --> 12:21.970
So what we've done here in multiple lines is what I have done here in one line.

12:22.150 --> 12:24.140
Okay good.

12:24.150 --> 12:25.670
So let's go to the next point.

12:25.700 --> 12:31.300
Calculate how many customers are there in the online shops so we have currently all the customers maybe

12:31.310 --> 12:39.500
one maybe two and three present has a or present as a separate variable more here each of them is separated.

12:39.680 --> 12:43.720
And once you have them within this client's list.

12:43.790 --> 12:46.350
So let's put them in there.

12:46.790 --> 12:48.550
Well how do we do that.

12:48.890 --> 13:04.400
We simply use the append function append mail one then have clients that append mail to and clients

13:05.030 --> 13:07.260
append Mail free.

13:07.280 --> 13:10.280
And of course you have to be super careful that the names are correct.

13:10.280 --> 13:15.770
So this is clients exactly the name as we had it here.

13:15.800 --> 13:23.120
So now let's print it out or let's run it and you can see we have our thought magic work and so forth

13:23.940 --> 13:27.760
who you know had Darden at all those kind of guys.

13:29.030 --> 13:31.840
Now we want to know the number of people in the list.

13:31.850 --> 13:33.170
So let's go ahead and do that.

13:33.170 --> 13:38.240
Print Len clients.

13:38.390 --> 13:44.150
So what that does is it simply gives us the length of this list of clients.

13:44.450 --> 13:52.970
And this by the way we just added an element or a string to our list which is called clients and that's

13:52.970 --> 14:01.250
done by the append function now finally assembling e-mail address from strings so now we have the approach

14:01.250 --> 14:07.100
it is vice versa we have stage magic and magic dot com and now we would like to have something like

14:07.100 --> 14:09.670
stage magic at magic dot com.

14:09.710 --> 14:14.690
So let's do that and therefore we need to use the join function.

14:14.690 --> 14:24.520
So let's print at thought join magic ssion or magician.

14:24.980 --> 14:26.080
This one here.

14:26.180 --> 14:29.560
And if you want to make sure you can copy and paste it so not it's printed out.

14:29.570 --> 14:32.640
And as you can see stage magic and magic come.

14:32.660 --> 14:40.490
So if you want to combine two elements from or multiple element elements from a list you can use to

14:40.490 --> 14:41.770
join function.

14:41.990 --> 14:43.790
If you want to separate them.

14:43.790 --> 14:50.940
You used to split function and if you want to add an element to a list use depende function.

14:51.020 --> 14:51.650
All right.

14:51.800 --> 14:55.950
So if you managed all of it that's awesome if you manage some of that.

14:56.030 --> 15:01.700
It's still good if you didn't manage any of them then you might want to read watch or reread some of

15:01.700 --> 15:06.050
the hands of handouts that you have within this chapter.

15:06.050 --> 15:09.380
All right so I hope you enjoy this chapter in the next chapter.

15:09.380 --> 15:16.850
We're going to look at the next basic aspects which are super important in programming and that will

15:16.850 --> 15:19.030
be control flows.

15:19.040 --> 15:20.480
So see you there.
